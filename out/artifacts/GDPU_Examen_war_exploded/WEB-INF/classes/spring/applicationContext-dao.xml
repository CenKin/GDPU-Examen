<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx"    
    xmlns:aop="http://www.springframework.org/schema/aop"    
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	
    <!-- 加载配置文件 -->
    <context:property-placeholder location="classpath:db.properties"/>
    
    <!-- dbcp连接池配置 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
		p:driverClassName="${jdbc.driver}"
		p:url="${jdbc.url}"
		p:username="${jdbc.username}"
		p:password="${jdbc.password}"/>
	
	<!-- sqlSessionFactory -->
    <!-- 当mybatis的xml文件和mapper接口不在相同包下时，需要用mapperLocations属性指定xml文件的路径。*是个通配符，代表所有的文件，**代表所有目录下 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
	    p:dataSource-ref="dataSource"
	    p:configLocation="classpath:mybatis/sqlMapConfig.xml"
		p:mapperLocations="classpath:mybatis/mapper/**/*.xml">
	</bean>

	<!-- 由于mapper会有很多，配置会很繁琐，所以使用mapper扫描器
	从mapper包中扫描mapper接口。自动创建代理对象并且在Spring容器注册 --> 
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
	    p:basePackage="cn.examen.mapper.*"
	    p:sqlSessionFactoryBeanName="sqlSessionFactory"/>
</beans>